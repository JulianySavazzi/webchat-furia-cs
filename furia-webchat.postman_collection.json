{
	"info": {
		"_postman_id": "0599816c-225e-45d9-9531-a925f2613bb1",
		"name": "furia-webchat",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "36939294",
		"_collection_link": "https://lunar-astronaut-590655.postman.co/workspace/Bee-Web~d4072658-7af5-40fd-9807-93c02328771e/collection/36939294-0599816c-225e-45d9-9531-a925f2613bb1?action=share&source=collection_link&creator=36939294"
	},
	"item": [
		{
			"name": "Auth",
			"item": [
				{
					"name": "register",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "name",
									"value": "sweet",
									"type": "text"
								},
								{
									"key": "email",
									"value": "sweetdreams@test.com",
									"type": "text"
								},
								{
									"key": "password",
									"value": "12345678",
									"type": "text"
								},
								{
									"key": "username",
									"value": "sweetdogdreams",
									"type": "text"
								},
								{
									"key": "steamid",
									"value": "",
									"type": "text",
									"disabled": true
								},
								{
									"key": "avatar",
									"value": "",
									"type": "text",
									"disabled": true
								},
								{
									"key": "profile_url",
									"value": "",
									"type": "text",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "{{url}}/register",
							"host": [
								"{{url}}"
							],
							"path": [
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Verifica se a resposta foi bem-sucedida (status 200)",
									"if (pm.response.code === 200) {",
									"    // Converte a resposta para JSON",
									"    const responseData = pm.response.json();",
									"    ",
									"    // Verifica se o token existe na resposta",
									"    if (responseData.token) {",
									"        // Salva o token na variável de ambiente (ex.: 'token')",
									"        pm.environment.set(\"token\", responseData.token);",
									"        ",
									"        // Exibe uma mensagem no Postman (opcional)",
									"        console.log(\"Token salvo com sucesso:\", responseData.token);",
									"    } else {",
									"        console.log(\"Token não encontrado na resposta.\");",
									"    }",
									"} else {",
									"    console.log(\"Login falhou. Status:\", pm.response.code);",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "username",
									"value": "sweetdreams@test.com",
									"type": "text"
								},
								{
									"key": "password",
									"value": "12345678",
									"type": "text"
								},
								{
									"key": "username",
									"value": "sweetdogdreams",
									"type": "text",
									"disabled": true
								},
								{
									"key": "username",
									"value": "sofiadog",
									"type": "text",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "{{url}}/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"login"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "User",
			"item": [
				{
					"name": "logout",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Verifica se a resposta foi bem-sucedida (status 200)",
									"if (pm.response.code === 200) {",
									"    // Converte a resposta para JSON",
									"    const responseData = pm.response.json();",
									"    ",
									"    // Verifica se o token existe na resposta",
									"    if (responseData.token) {",
									"        // Salva o token na variável de ambiente (ex.: 'token')",
									"        pm.environment.set(\"token\", responseData.token);",
									"        ",
									"        // Exibe uma mensagem no Postman (opcional)",
									"        console.log(\"Token salvo com sucesso:\", responseData.token);",
									"    } else {",
									"        console.log(\"Token não encontrado na resposta.\");",
									"    }",
									"} else {",
									"    console.log(\"Login falhou. Status:\", pm.response.code);",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/user/logout",
							"host": [
								"{{url}}"
							],
							"path": [
								"user",
								"logout"
							]
						}
					},
					"response": []
				},
				{
					"name": "index",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Verifica se a resposta foi bem-sucedida (status 200)",
									"if (pm.response.code === 200) {",
									"    // Converte a resposta para JSON",
									"    const responseData = pm.response.json();",
									"    ",
									"    // Verifica se o token existe na resposta",
									"    if (responseData.token) {",
									"        // Salva o token na variável de ambiente (ex.: 'token')",
									"        pm.environment.set(\"token\", responseData.token);",
									"        ",
									"        // Exibe uma mensagem no Postman (opcional)",
									"        console.log(\"Token salvo com sucesso:\", responseData.token);",
									"    } else {",
									"        console.log(\"Token não encontrado na resposta.\");",
									"    }",
									"} else {",
									"    console.log(\"Login falhou. Status:\", pm.response.code);",
									"}",
									"var template = `",
									"<style type=\"text/css\">",
									"    .tftable {font-size:14px;color:#333333;width:100%;border-width: 1px;border-color: #87ceeb;border-collapse: collapse;}",
									"    .tftable th {font-size:18px;background-color:#87ceeb;border-width: 1px;padding: 8px;border-style: solid;border-color: #87ceeb;text-align:left;}",
									"    .tftable tr {background-color:#ffffff;}",
									"    .tftable td {font-size:14px;border-width: 1px;padding: 8px;border-style: solid;border-color: #87ceeb;}",
									"    .tftable tr:hover {background-color:#e0ffff;}",
									"</style>",
									"",
									"<table class=\"tftable\" border=\"1\">",
									"    <tr>",
									"        <th>ID</th>",
									"        <th>Name</th>",
									"        <th>Email</th>",
									"        <th>Created At</th>",
									"        <th>Updated At</th>",
									"        <th>Username</th>",
									"        <th>Avatar</th>",
									"        <th>Profile URL</th>",
									"        <th>Teams</th>",
									"    </tr>",
									"    ",
									"    {{#each response}}",
									"        <tr>",
									"            <td>{{id}}</td>",
									"            <td>{{name}}</td>",
									"            <td>{{email}}</td>",
									"            <td>{{created_at}}</td>",
									"            <td>{{updated_at}}</td>",
									"            <td>{{username}}</td>",
									"            <td>{{avatar}}</td>",
									"            <td>{{profile_url}}</td>",
									"            <td>",
									"                <table>",
									"                    <tr>",
									"                        <th>ID</th>",
									"                        <th>Name</th>",
									"                        <th>Slug</th>",
									"                        <th>Owner ID</th>",
									"                        <th>Is Public</th>",
									"                        <th>Created At</th>",
									"                        <th>Updated At</th>",
									"                    </tr>",
									"                    {{#each teams}}",
									"                        <tr>",
									"                            <td>{{id}}</td>",
									"                            <td>{{name}}</td>",
									"                            <td>{{slug}}</td>",
									"                            <td>{{owner_id}}</td>",
									"                            <td>{{is_public}}</td>",
									"                            <td>{{created_at}}</td>",
									"                            <td>{{updated_at}}</td>",
									"                        </tr>",
									"                    {{/each}}",
									"                </table>",
									"            </td>",
									"        </tr>",
									"    {{/each}}",
									"</table>",
									"`;",
									"",
									"function constructVisualizerPayload() {",
									"    return {response: pm.response.json()}",
									"}",
									"",
									"pm.visualizer.set(template, constructVisualizerPayload());"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/user",
							"host": [
								"{{url}}"
							],
							"path": [
								"user"
							],
							"query": [
								{
									"key": "name",
									"value": "u",
									"disabled": true
								},
								{
									"key": "email",
									"value": "bot",
									"disabled": true
								},
								{
									"key": "username",
									"value": "fu",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "me",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Verifica se a resposta foi bem-sucedida (status 200)",
									"if (pm.response.code === 200) {",
									"    // Converte a resposta para JSON",
									"    const responseData = pm.response.json();",
									"    ",
									"    // Verifica se o token existe na resposta",
									"    if (responseData.token) {",
									"        // Salva o token na variável de ambiente (ex.: 'token')",
									"        pm.environment.set(\"token\", responseData.token);",
									"        ",
									"        // Exibe uma mensagem no Postman (opcional)",
									"        console.log(\"Token salvo com sucesso:\", responseData.token);",
									"    } else {",
									"        console.log(\"Token não encontrado na resposta.\");",
									"    }",
									"} else {",
									"    console.log(\"Login falhou. Status:\", pm.response.code);",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/user/me",
							"host": [
								"{{url}}"
							],
							"path": [
								"user",
								"me"
							],
							"query": [
								{
									"key": "name",
									"value": "",
									"disabled": true
								},
								{
									"key": "email",
									"value": "bot",
									"disabled": true
								},
								{
									"key": "username",
									"value": "fu",
									"disabled": true
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Team",
			"item": []
		},
		{
			"name": "Message",
			"item": [
				{
					"name": "list messages",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Verifica se a resposta foi bem-sucedida (status 200)",
									"if (pm.response.code === 200) {",
									"    // Converte a resposta para JSON",
									"    const responseData = pm.response.json();",
									"    ",
									"    // Verifica se o token existe na resposta",
									"    if (responseData.token) {",
									"        // Salva o token na variável de ambiente (ex.: 'token')",
									"        pm.environment.set(\"token\", responseData.token);",
									"        ",
									"        // Exibe uma mensagem no Postman (opcional)",
									"        console.log(\"Token salvo com sucesso:\", responseData.token);",
									"    } else {",
									"        console.log(\"Token não encontrado na resposta.\");",
									"    }",
									"} else {",
									"    console.log(\"Login falhou. Status:\", pm.response.code);",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/chat/messages/{{user-to}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"chat",
								"messages",
								"{{user-to}}"
							],
							"query": [
								{
									"key": "name",
									"value": "",
									"disabled": true
								},
								{
									"key": "email",
									"value": "bot",
									"disabled": true
								},
								{
									"key": "username",
									"value": "fu",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "send messages",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Verifica se a resposta foi bem-sucedida (status 200)",
									"if (pm.response.code === 200) {",
									"    // Converte a resposta para JSON",
									"    const responseData = pm.response.json();",
									"    ",
									"    // Verifica se o token existe na resposta",
									"    if (responseData.token) {",
									"        // Salva o token na variável de ambiente (ex.: 'token')",
									"        pm.environment.set(\"token\", responseData.token);",
									"        ",
									"        // Exibe uma mensagem no Postman (opcional)",
									"        console.log(\"Token salvo com sucesso:\", responseData.token);",
									"    } else {",
									"        console.log(\"Token não encontrado na resposta.\");",
									"    }",
									"} else {",
									"    console.log(\"Login falhou. Status:\", pm.response.code);",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"content\": \"Oi!\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/chat/messages/{{user-to}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"chat",
								"messages",
								"{{user-to}}"
							],
							"query": [
								{
									"key": "content",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "send team messages",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Verifica se a resposta foi bem-sucedida (status 200)",
									"if (pm.response.code === 200) {",
									"    // Converte a resposta para JSON",
									"    const responseData = pm.response.json();",
									"    ",
									"    // Verifica se o token existe na resposta",
									"    if (responseData.token) {",
									"        // Salva o token na variável de ambiente (ex.: 'token')",
									"        pm.environment.set(\"token\", responseData.token);",
									"        ",
									"        // Exibe uma mensagem no Postman (opcional)",
									"        console.log(\"Token salvo com sucesso:\", responseData.token);",
									"    } else {",
									"        console.log(\"Token não encontrado na resposta.\");",
									"    }",
									"} else {",
									"    console.log(\"Login falhou. Status:\", pm.response.code);",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"content\": \"Oi team!\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/chat/messages/team/{{team}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"chat",
								"messages",
								"team",
								"{{team}}"
							],
							"query": [
								{
									"key": "content",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "list team messages",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Verifica se a resposta foi bem-sucedida (status 200)",
									"if (pm.response.code === 200) {",
									"    // Converte a resposta para JSON",
									"    const responseData = pm.response.json();",
									"    ",
									"    // Verifica se o token existe na resposta",
									"    if (responseData.token) {",
									"        // Salva o token na variável de ambiente (ex.: 'token')",
									"        pm.environment.set(\"token\", responseData.token);",
									"        ",
									"        // Exibe uma mensagem no Postman (opcional)",
									"        console.log(\"Token salvo com sucesso:\", responseData.token);",
									"    } else {",
									"        console.log(\"Token não encontrado na resposta.\");",
									"    }",
									"} else {",
									"    console.log(\"Login falhou. Status:\", pm.response.code);",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"content\": \"Oi!\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/chat/messages/team/{{team}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"chat",
								"messages",
								"team",
								"{{team}}"
							],
							"query": [
								{
									"key": "content",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Interaction",
			"item": []
		},
		{
			"name": "test",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/testing",
					"host": [
						"{{url}}"
					],
					"path": [
						"testing"
					]
				}
			},
			"response": []
		},
		{
			"name": "list all usernames",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/furiosos",
					"host": [
						"{{url}}"
					],
					"path": [
						"furiosos"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "url",
			"value": "http://127.0.0.1:8000",
			"type": "string"
		},
		{
			"key": "token",
			"value": "",
			"type": "string"
		}
	]
}